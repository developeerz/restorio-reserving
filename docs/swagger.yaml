basePath: /
definitions:
  dto.CreateTableRequest:
    properties:
      restaurant_id:
        type: integer
      seats_number:
        type: integer
      shape:
        description: ENUM TABLE_SHAPE
        type: string
      table_number:
        type: string
      type:
        description: ENUM TABLE_TYPE
        type: string
      x:
        description: Координаты опционально
        type: integer
      "y":
        type: integer
    required:
    - restaurant_id
    - seats_number
    - shape
    - type
    type: object
  dto.ErrorResponse:
    properties:
      error:
        type: string
    type: object
  dto.FreeTableResponse:
    properties:
      restaurant_name:
        type: string
      seats_number:
        type: integer
      table_id:
        type: integer
      table_number:
        type: integer
    type: object
  dto.GetTablesByRestaurantIDResponse:
    properties:
      tables:
        items:
          $ref: '#/definitions/dto.Table'
        type: array
    type: object
  dto.ReservationRequest:
    properties:
      reservation_time_from:
        description: Время начала бронирования (RFC3339)
        type: string
      reservation_time_to:
        description: Время окончания бронирования (RFC3339)
        type: string
      table_id:
        description: Идентификатор столика
        type: integer
    type: object
  dto.ReservationResponse:
    properties:
      message:
        type: string
      reservation_id:
        type: integer
    type: object
  dto.Table:
    properties:
      seats_number:
        type: integer
      shape:
        type: string
      table_id:
        type: integer
      table_number:
        type: string
      type:
        type: string
      x:
        type: integer
      "y":
        type: integer
    type: object
  dto.TimeSlotResponse:
    properties:
      free_from:
        example: "2025-03-26T08:00:00Z"
        type: string
      free_until:
        example: "2025-03-26T10:00:00Z"
        type: string
    type: object
  dto.UserReservationResponse:
    properties:
      reservation_id:
        type: integer
      reservation_time_from:
        type: string
      reservation_time_to:
        type: string
      restaurant_name:
        type: string
      seats_number:
        type: integer
      table_id:
        type: integer
      table_number:
        type: integer
    type: object
host: localhost:8082
info:
  contact: {}
  description: API для бронирования столиков
  title: Restorio API
  version: "1.0"
paths:
  /reservations/free-tables:
    get:
      description: Возвращает список доступных столиков на указанный период
      parameters:
      - description: Начало периода бронирования (в формате RFC3339)
        in: query
        name: reservation_time_from
        required: true
        type: string
      - description: Конец периода бронирования (в формате RFC3339)
        in: query
        name: reservation_time_to
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/dto.FreeTableResponse'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
      summary: Получить список свободных столиков
      tags:
      - Booking
  /reservations/new-reservation:
    post:
      consumes:
      - application/json
      description: Эта функция выполняет бронирование столика для пользователя на
        указанный период времени.
      parameters:
      - description: Информация о бронировании
        in: body
        name: reservation
        required: true
        schema:
          $ref: '#/definitions/dto.ReservationRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.ReservationResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
      summary: Бронирование столика
      tags:
      - Booking
  /reservations/user:
    get:
      description: Возвращает список всех бронирований, сделанных пользователем, включая
        информацию о ресторане и столике.
      parameters:
      - description: ID пользователя
        in: header
        name: user_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/dto.UserReservationResponse'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
      summary: Получение всех бронирований пользователя
      tags:
      - User
  /tables:
    get:
      parameters:
      - description: ID ресторана
        example: 1
        in: query
        name: restaurant_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.GetTablesByRestaurantIDResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
      summary: Получение столиков по id ресторана
      tags:
      - Tables
  /tables/{table_id}/free-times:
    get:
      description: Возвращает список свободных временных интервалов для бронирования
        указанного столика.
      parameters:
      - description: ID столика
        example: 1
        in: path
        name: table_id
        required: true
        type: integer
      - description: Начало интервала (формат RFC3339)
        example: "2025-03-26T08:00:00Z"
        in: query
        name: start
        required: true
        type: string
      - description: Конец интервала (формат RFC3339)
        example: "2025-03-26T22:00:00Z"
        in: query
        name: end
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 'Пример:\n[  {\"free_from\": {\"Time\":\"2025-03-26T08:00:00Z\",\"Valid\":true},\"free_until\":
            {\"Time\":\"2025-03-26T10:00:00Z\",\"Valid\":true}},  {\"free_from\":
            {\"Time\":\"2025-03-26T12:00:00Z\",\"Valid\":true},\"free_until\": {\"Time\":\"2025-03-26T18:00:00Z\",\"Valid\":true}}]'
          schema:
            items:
              $ref: '#/definitions/dto.TimeSlotResponse'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dto.ErrorResponse'
      summary: Получить свободные временные интервалы для столика
      tags:
      - Booking
  /tables/new-table:
    post:
      consumes:
      - application/json
      description: Создаёт новый столик в ресторане и сохраняет его позицию, если
        координаты указаны
      parameters:
      - description: Информация о столике
        in: body
        name: table
        required: true
        schema:
          $ref: '#/definitions/dto.CreateTableRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Столик добавлен
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Неверный формат запроса
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Ошибка при добавлении столика
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Добавить столик
      tags:
      - Admin
swagger: "2.0"
